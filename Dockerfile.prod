## BUILDER ##

FROM python:3.12.3-slim as builder

RUN apt-get update \
  && apt-get -y install netcat-traditional gcc postgresql \
  && apt-get clean

WORKDIR /usr/src/app

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

RUN pip install --upgrade pip
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

COPY . .
RUN pip install flake8 black isort
RUN flake8 --exclude=venv, glucose/migrations .
RUN black . --check
RUN isort . --profile black --check-only

## FINAL ##

FROM python:3.12.3-slim

WORKDIR /usr/src/app

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV DEBUG 0
ARG SECRET_KEY
ENV SECRET_KEY $SECRET_KEY
ENV DJANGO_ALLOWED_HOSTS *

RUN apt-get update \
  && apt-get -y install netcat-traditional gcc postgresql \
  && apt-get clean


COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

COPY . .

# add and run as non-root user
RUN adduser --disabled-password unauser
USER unauser

# run gunicorn
CMD gunicorn una.wsgi:application --bind 0.0.0.0:$PORT

