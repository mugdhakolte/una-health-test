name: Continuous Integration and Delivery

on: [ push ]

env:
  IMAGE: ghcr.io/${{ github.repository }}/una_test
  USER: una_user
  DB_NAME: una_test
  DB_USER: una_user
  DB_PASSWORD: una_password

jobs:
  build:
    name: Build Docker Image
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Log in to Github Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push builder Image
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile.prod
          push: true
          tags: ${{ env.IMAGE }}-builder:latest
          build-args: |
            SECRET_KEY=$SECRET_KEY
          cache-from: type=registry,ref=${{ env.IMAGE }}-builder:latest
          cache-to: type=inline

      - name: Build and push final Image
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile.prod
          push: true
          tags: ${{ env.IMAGE }}-final:latest
          build-args: |
            SECRET_KEY=$SECRET_KEY
          cache-from: type=registry,ref=${{ env.IMAGE }}-final:latest
          cache-to: type=inline

  test:
    name: Test docker Image
    permissions: write-all
    runs-on: ubuntu-latest
    needs: build

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ env.DB_NAME }}
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Log in to Github Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push builder Image
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile.prod
          load: true
          tags: ${{ env.IMAGE }}-builder:latest
          build-args: |
            SECRET_KEY=$SECRET_KEY
          cache-from: type=registry,ref=${{ env.IMAGE }}-builder:latest
          cache-to: type=inline

      - name: Build and push final Image
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile.prod
          load: true
          tags: ${{ env.IMAGE }}-final:latest
          build-args: |
            SECRET_KEY=$SECRET_KEY
          cache-from: type=registry,ref=${{ env.IMAGE }}-final:latest
          cache-to: type=inline

      - name: Run container
        run: |
          docker run \
            -d \
            --name una-glucose \
            -e DATABASE_URL=postgres://${{ env.DB_USER }}:${{ env.DB_PASSWORD }}@localhost:5432/${{ env.DB_NAME }} \
            -e DATABASE_TEST_URL=postgres://${{ env.DB_USER }}:${{ env.DB_PASSWORD }}@localhost:5432/${{ env.DB_NAME }} \
            ${{ env.IMAGE }}-final:latest

      - name: Install requirements
        run: docker exec una-glucose pip install black==24.4.0 isort==5.13.2 pytest==8.1.1

      - name: Django Unit tests
        run: docker exec una-glucose python manage.py test

      - name: Pytest
        run: docker exec una-glucose python -m pytest .

      - name: Black
        run: docker exec una-glucose python -m black . --check

      - name: isort
        run: docker exec una-glucose python -m isort . --profile black --check-only

      - name: Ruff
        uses: chartboost/ruff-action@v1
        with:
          args: 'format --check'